{"version":3,"sources":["components/addform.js","services/communication.js","components/todo.js","components/navigation.js","App.js","reportWebVitals.js","index.js"],"names":["AddForm","onSubmit","newTitle","newDescription","newName","addNewTitle","addNewDescription","addNewName","headStyle","style","method","Form","Group","Control","size","as","value","onChange","id","placeholder","Button","varient","type","baseUrl","TodoService","getAll","axios","get","then","response","data","create","newObject","post","update","todoObject","put","TodoList","todos","setTodos","useState","showAll","setShowAll","todoShow","filter","todo","important","textAlign","position","top","onClick","map","title","description","name","find","t","changedTodo","returnedTodo","toggleImportanceOf","taskStatus","variant","completedTodo","taskComplete","Navigation","backgroundColor","fontSize","class","to","App","setNewTitle","setNewDescription","setNewName","useEffect","intialData","fontStyle","color","path","event","preventDefault","length","Math","random","String","returnedData","console","log","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99c9c696.chunk.js","sourcesContent":["import React from 'react'\nimport { Form, Button } from 'react-bootstrap'\nconst AddForm = ({onSubmit,newTitle,newDescription,newName,addNewTitle,addNewDescription,addNewName,headStyle}) => {\n    return(\n        <div>\n            <h1 style={headStyle}> Add New ToDo Task</h1>\n            <form method='post' onSubmit={onSubmit}>\n            <Form.Group>\n            <Form.Control size=\"lg\" as=\"textarea\" value = {newTitle} onChange={addNewTitle} id=\"title\" placeholder=\"TODO Title\"/> <br/>\n            <Form.Control size=\"text\" as=\"textarea\" value = {newDescription} onChange= {addNewDescription}  placeholder=\"Description\" id=\"placeholder\"/> <br/>\n            <Form.Control size=\"text\" as=\"textarea\" value={newName} onChange={addNewName} id=\"name\" placeholder=\"Task Perfomer\"/> <br/>\n            <Button varient=\"primary\" type=\"text\">Save</Button>\n            </Form.Group>\n                \n            </form>\n        </div>\n    \n    )\n}\n\n\n\n\nexport default AddForm\n","import axios from 'axios'\nconst baseUrl = '/api/todos'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request =  axios.post(baseUrl,newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id,todoObject) => {\n    const request = axios.put(`${baseUrl}/${id}`,todoObject)\n    return request.then(response => response.data)\n}\n\nconst TodoService = {getAll,create,update}\nexport default TodoService\n","import React, {  useState } from 'react'\nimport TodoService from '../services/communication'\nimport { Button} from 'react-bootstrap'\nimport { Table,Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table'\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css'\n\nconst TodoList = ({todos,setTodos,headStyle}) => {\nconst [showAll,setShowAll] = useState(true)\nconst toggleImportanceOf = (id) => {\n    const todo = todos.find(t => t.id === id)\n    const changedTodo = {...todo,important: !todo.important}\n    TodoService.update(id, changedTodo)\n    .then(returnedTodo => {\n        setTodos(todos.map(todo => todo.id !== id ? todo : returnedTodo))\n    })\n    }\nconst taskComplete = (id) => {\n    const todo = todos.find(t => t.id === id)\n    const completedTodo = {...todo,taskStatus :'Completed'}\n    TodoService.update(id,completedTodo)\n    .then(returnedTodo => {\n        setTodos(todos.map(todo => todo.id !== id ? todo :returnedTodo))\n    })\n}\nconst buttonStyle = {\n    textAlign:'center',\n    position:'relative',\n    top:25\n}\n\nconst todoShow = showAll ? todos : todos.filter(todo => todo.important === true)\n\n   return (\n        <div>\n        <h1 style={headStyle}>Tasks</h1>\n        <div style={buttonStyle}>\n        <Button varient=\"primary\" size=\"lg\" onClick={() => setShowAll(!showAll)}>Show {showAll?'Important':'All'} Task</Button>\n        </div>\n        <br/> <br/>\n        <Table style={{\"fontSize\":20}} >\n        <Thead>\n            <Tr>\n            <Th>Title</Th>\n            <Th>Description</Th>\n            <Th>Task Perfomer</Th>\n            <Th>Task Importance</Th>\n            <Th>Change Task Importance</Th>\n            <Th>Task Status </Th>\n            </Tr>\n        </Thead>\n        <Tbody>\n            {todoShow.map(todo =>\n                <Tr key={todo.id}>\n                    <Td>{todo.title}</Td> \n                    <Td>{todo.description} </Td>\n                    <Td>{todo.name}</Td>   \n                    <Td>{todo.important ?<p style={{'color':'red', 'fontWeight':'bold'}}> Important </p> : 'Not Important'}</Td> \n                    <Td> <button onClick={() => toggleImportanceOf(todo.id)}>{todo.important ? 'make not important':'make important'}</button></Td>\n                    <Td >{todo.taskStatus === 'Completed'? <p style={{\"color\":'green','fontWeight':'bold'}}>{todo.taskStatus} </p>:'Pending'} {todo.taskStatus === 'Pending' ? <Button \n                     variant=\"primary\" id=\"status\" onClick={() => taskComplete(todo.id)}>Done</Button> : '' }</Td>\n                    \n                </Tr>\n            )}\n        </Tbody>\n        </Table>\n        </div>\n    )\n}\n\nexport default TodoList","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Navigation = () => {\n    const navStyle = {\n        backgroundColor: '#e3f2fd',\n        fontSize:30\n    }\n    return(\n        <div style={navStyle}>\n            <nav class=\"navbar navbar-light\">\n            <Link to= \"/todo\">ToDo's</Link>\n            <Link to= \"/\">Add New Task</Link> \n        </nav>       \n        </div>\n        \n    )\n}\n\nexport default Navigation","import React, { useEffect, useState } from 'react';\nimport AddForm from './components/addform';\nimport TodoList from './components/todo';\nimport TodoService from './services/communication';\nimport { BrowserRouter as Router,Route,Switch } from 'react-router-dom';\nimport Navigation from './components/navigation';\nimport './App.css'\n\nconst App = () => {\n  const [todos,setTodos] = useState([])\n  const [newTitle,setNewTitle] = useState('')\n  const [newDescription,setNewDescription] = useState('')\n  const [newName,setNewName] = useState('')\n\nuseEffect(() => {\n  TodoService.getAll()\n  .then(intialData => {\n    setTodos(intialData)\n  })\n},[])\n\nconst headStyle = {\n  fontStyle:'italic',\n  fontSize:30,\n  color:'#3399FF',\n  textAlign:'center'\n}\n\nconst addTodo = (event) => {\n  event.preventDefault();\n  const todoObject = {\n    title:newTitle,\n    description:newDescription,\n    name:newName,\n    id:todos.length+1,\n    important:Math.random() < 0.5,\n    taskStatus:String\n  }\n\n  TodoService.create(todoObject)\n  .then(returnedData => {\n    setTodos([...todos, returnedData])\n    setNewTitle('')\n    setNewDescription('')\n    setNewName('')\n  })\n}\nconst addNewTitle = (event) => {\n  console.log(event.target.value)\n  setNewTitle(event.target.value)\n}\nconst addNewDescription = (event) => {\n  console.log(event.target.value)\n  setNewDescription(event.target.value)\n}\nconst addNewName = (event) => {\n  console.log(event.target.value)\n  setNewName(event.target.value)\n}\nreturn(\n  <>\n    <Router>\n      <Navigation/> <br/><br/>\n      <Switch>\n        <Route path=\"/todo\"> \n          <TodoList headStyle = {headStyle} todos={todos} setTodos={setTodos}/>\n        </Route>\n        <Route path=\"/\">\n          <AddForm headStyle = {headStyle} onSubmit={addTodo} newTitle={newTitle} addNewTitle={addNewTitle} addNewDescription={addNewDescription} \n          addNewName={addNewName} newDescription={newDescription} newName={newName}/>\n        </Route>\n      </Switch>\n    </Router>\n  </>\n)\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}